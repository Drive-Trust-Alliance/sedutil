Building the PBA images for sedutil
These instructions are based on a Xubuntu 14.x system, YMMV.

Prereqs:
You need a multiarch system so that you can build both 32 & 64 bit systems.
build essential
ncurses

Get/Build the pieces:

Building the PBA program.
	cd ../LinuxPBA
	rm -rf dist
	make CONF=Release 
	make CONF=Release_x86_64
	make CONF=Debug 
	make CONF=Debug_x86_64
	cd ../images

Building sedutil-cli
	cd ../linux/CLI
	rm -rf dist
	make CONF=Release_i686 
	make CONF=Release_x86_64
	make CONF=Debug_i686
	make CONF=Debug_x86_64
	cd ../../images

Getting TinyCore and syslinux.

./getresources

If you wish to auto-unlock your SSDs using a USB device, or use a Yubikey's 
challenge-response password you must first setup those devices here.  The syntax is:
./setupautounlock <device> <password> [tpm_nvram_slot|usb_device...]

You may specify multiple USB devices or TPM NVRam slots (or none at all).  You will be
prompted to add Yubikey challenge-responses.  USB devices must have a vfat or ext*
partition as it's first partition, and you should not delete the .key file written to
that partition.  You may only have up to 8 keys.

On boot, Unlocking will be attempted first via. TPM NVRam, then via. USB flash drives,
then via Yubikey challenge-responses.  Failing these methods it will fall back to simply
prompting for the OPAL unlock password.  This means if you wish to unlock using a USB
flash device or yubikey it must be inserted when you boot!

Build the PBA kernels and root filesystems
./buildpbaroot

Build the image files.
Rescue -> ./buildrescue
biosLinux -> ./buildbiosLinux Release
uefi64 -> ./buildUEFI64 Release

Build the Debug images
biosLinux -> ./buildbiosLinux Debug
uefi64 -> ./buildUEFI64 Debug

Building the syslinux based system:
The scripts assume that the syslinux repo is at the same level in the filesystem as sedutil

cd ../../syslinux
make
cd ../sedutil/images
./buildbiospba Release
./buildbiospba Debug





	
